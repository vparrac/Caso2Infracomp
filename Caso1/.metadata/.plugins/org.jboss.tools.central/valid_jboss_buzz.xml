<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>The rise of non-microservices architectures</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Baj6QBaxTnA/" /><category term="Architecture" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="miniservices" scheme="searchisko:content:tags" /><category term="Modern App Dev" scheme="searchisko:content:tags" /><category term="monolithic service" scheme="searchisko:content:tags" /><category term="self-contained system" scheme="searchisko:content:tags" /><author><name>Bilgin Ibryam</name></author><id>searchisko:content:id:jbossorg_blog-the_rise_of_non_microservices_architectures</id><updated>2018-09-10T13:25:24Z</updated><published>2018-09-10T13:25:24Z</published><content type="html">&lt;p&gt;This post is a short summary of my recent experiences with customers that are implementing architectures similar to microservices but with different characteristics in the current post-microservices world.&lt;/p&gt; &lt;p&gt;The microservices architectural style has been around for close to five years now, and much has been said and written about it. Today, I see teams deciding not to strictly follow certain principles of the &amp;#8220;pure&amp;#8221; microservices architecture and to break some of the &amp;#8220;rules.&amp;#8221; Teams are now more informed about the pros and cons of microservices, and they make context-driven decisions respecting team experience and organizational boundaries and accept the fact that not every company is Netflix. Below are some examples I have seen in my recent microservices gigs.&lt;/p&gt; &lt;p&gt;&lt;span id="more-517597"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;No premium in advance&lt;/h2&gt; &lt;p&gt;Teams (composed of devs, ops, testers, business analysts, architects, etc.) are becoming more and more aware of the&lt;a href="https://www.martinfowler.com/bliki/MicroservicePremium.html"&gt; premium&lt;/a&gt; they have to pay for the privilege of going to a pure microservices-based architecture. A typical Java-based microservice running on Kubernetes (the most popular microservices platform) will require a Git repository, a Maven module, a collection of tests (unit, integration, acceptance), APIs, Maven artifacts, container images, configurations, secure configurations, build pipelines, design, documentation, etc. At runtime, it will require CPU, memory, disk, networking, metrics aggregation, log aggregation, database, endpoints, service mesh proxy sidecar, etc. It will also need a collection of Kubernetes objects: container, volume, configmap, secret, pod, service, replica set, deployment, etc. Navigating and managing tens or hundreds of these artifacts puts a serious burden on everybody in a team. It&amp;#8217;s no surprise that recently ThoughtWorks announced it &lt;a href="https://www.thoughtworks.com/insights/blog/microservices-adopt"&gt;is not intending&lt;/a&gt; to put a microservices architecture into the &amp;#8220;adopting&amp;#8221; phase of its &lt;a href="https://www.thoughtworks.com/radar"&gt;Technology Radar&lt;/a&gt; in a foreseeable future.&lt;/p&gt; &lt;h2&gt;Raison d&amp;#8217;être&lt;/h2&gt; &lt;p&gt;Considering there is a cost per service (not envisaging the hidden premium), rather than the original &amp;#8220;start with tens of lines of code per service&amp;#8221;, systems start larger, they start as one service—as a mono repository—as long as the service belongs to one team. Then, for every service, there is a clearly identified reason with benefits justifying its existence as an independent microservice. There is a mandatory &amp;#8220;existence check&amp;#8221; before carving out a standalone service from the monolith. Below are a few very valid reasons for using or not using microservices.&lt;/p&gt; &lt;h3&gt;Breaking the bounded context&lt;/h3&gt; &lt;p&gt;While the most discussed method for decomposition into microservices is&lt;a href="https://martinfowler.com/bliki/BoundedContext.html"&gt; decomposition by bounded context&lt;/a&gt;, in practice there are many more reasons for creating microservices: decomposing by maturity, decomposing by data-access pattern (read versus write), decomposition by data source (rather than partitioning a data source per microservice, create a microservice per data source), aggregation for a derived functionality (create an orchestrating service for a few other services), aggregation for client convenience (such as the&lt;a href="https://samnewman.io/patterns/architectural/bff/"&gt; backend for frontend pattern&lt;/a&gt;), aggregation to aid system performance, etc.&lt;/p&gt; &lt;h3&gt;Shared data sources&lt;/h3&gt; &lt;p&gt;One of the fundamental principles of microservices is that every service has a separate data store. While in theory, this principle makes perfect sense, in practice, for brownfield projects, it is&lt;a href="http://blog.christianposta.com/microservices/the-hardest-part-about-microservices-data/"&gt; the hardest part about microservices&lt;/a&gt;, and it is not always worth the effort. That is especially true for integration projects where the data source is typically owned by a different team or company and cannot be partitioned to start with. It is still possible to benefit from having independent services sharing the same data store by acknowledging the future constraints caused by the data source level coupling.&lt;/p&gt; &lt;h2&gt;Fewer inflated expectations&lt;/h2&gt; &lt;p&gt;The good news is that teams are now making more-informed decisions rather than blindly trusting conference slides about microservices. In regards to Gartner&amp;#8217;s&lt;a href="https://en.wikipedia.org/wiki/Hype_cycle"&gt; hype cycle&lt;/a&gt;, after a couple of years of &amp;#8220;inflated expectations,&amp;#8221; the microservices architecture is heading (down) towards the &amp;#8220;trough of disillusionment&amp;#8221; stage where expectations are more aligned with the real benefits.&lt;/p&gt; &lt;div id="attachment_517627" style="width: 488px" class="wp-caption aligncenter"&gt;&lt;img class="wp-image-517627" src="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Gartner_Hype_Cycle.svg_-300x195.png" alt="Hype cycle" width="478" height="311" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/09/Gartner_Hype_Cycle.svg_-300x195.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/09/Gartner_Hype_Cycle.svg_.png 640w" sizes="(max-width: 478px) 100vw, 478px" /&gt;&lt;p class="wp-caption-text"&gt;Hype cycle&lt;/p&gt;&lt;/div&gt; &lt;p&gt;From here on, the future is full of enlightenment and productivity—unless another cycle starts (such as serverless) before we reap the benefits of this one.&lt;/p&gt; &lt;h2&gt;Mutated microservices&lt;/h2&gt; &lt;p&gt;Microservices favor event-driven interactions and choreography over orchestration to decrease service coupling. But at the same time, we have seen projects like &lt;a href="https://github.com/uber/cadence"&gt;Cadence&lt;/a&gt; by Uber and &lt;a href="https://netflix.github.io/conductor/"&gt;Conductor&lt;/a&gt; by Netflix that were created specifically to orchestrate distributed long-running services as an alternative to the choreography approach.&lt;/p&gt; &lt;p&gt;&lt;a href="https://twitter.com/berndruecker"&gt;Bernd Ruecker&lt;/a&gt; has done a very good &lt;a href="https://qconnewyork.com/system/files/presentation-slides/complex_event_flows_in_distributed_systems_0.pdf"&gt;review&lt;/a&gt; of using events, orchestration, and workflow engines in distributed systems analyzing their real benefits versus their perceived benefits.&lt;/p&gt; &lt;p&gt;In a different post titled &lt;a href="https://www.infoq.com/articles/microservices-post-kubernetes"&gt;Microservices in a Post-Kubernetes Era&lt;/a&gt;, I also described what changes in the microservices architectural style are driven purely by Kubernetes and the cloud-native primitives.&lt;/p&gt; &lt;p&gt;There are also others who have written about non-microservices architectures such as&lt;a href="https://scs-architecture.org/"&gt; self-contained systems&lt;/a&gt;,&lt;a href="https://sdtimes.com/micro/difference-miniservice-microservice/"&gt; miniservices&lt;/a&gt;, &lt;a href="https://segment.com/blog/goodbye-microservices/"&gt;other alternatives&lt;/a&gt; that are better than pure microservices in certain contexts.&lt;/p&gt; &lt;p&gt;These alternatives provide good reasons for breaking away from pure microservices principles whenever the context requires it.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;The best architecture is the context-driven architecture where you take a well-understood architecture and adapt it your needs. You question every principle and every rule, and you are not afraid of breaking away from some of the prescriptive elements as long as you understand and accept the consequences. A good analogy is “The map is not the territory.” If the architecture is the map, the context is the territory.&lt;/p&gt; &lt;p&gt;&lt;a href="https://twitter.com/bibryam"&gt;Let me know&lt;/a&gt; which microservices rules you are breaking and if breaking those rules works better for you. Be brave.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F09%2F10%2Fthe-rise-of-non-microservices-architectures%2F&amp;#38;linkname=The%20rise%20of%20non-microservices%20architectures" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F09%2F10%2Fthe-rise-of-non-microservices-architectures%2F&amp;#38;linkname=The%20rise%20of%20non-microservices%20architectures" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F09%2F10%2Fthe-rise-of-non-microservices-architectures%2F&amp;#38;linkname=The%20rise%20of%20non-microservices%20architectures" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F09%2F10%2Fthe-rise-of-non-microservices-architectures%2F&amp;#38;linkname=The%20rise%20of%20non-microservices%20architectures" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F09%2F10%2Fthe-rise-of-non-microservices-architectures%2F&amp;#38;linkname=The%20rise%20of%20non-microservices%20architectures" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F09%2F10%2Fthe-rise-of-non-microservices-architectures%2F&amp;#38;linkname=The%20rise%20of%20non-microservices%20architectures" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F09%2F10%2Fthe-rise-of-non-microservices-architectures%2F&amp;#38;linkname=The%20rise%20of%20non-microservices%20architectures" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F09%2F10%2Fthe-rise-of-non-microservices-architectures%2F&amp;#38;linkname=The%20rise%20of%20non-microservices%20architectures" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F09%2F10%2Fthe-rise-of-non-microservices-architectures%2F&amp;#38;title=The%20rise%20of%20non-microservices%20architectures" data-a2a-url="https://developers.redhat.com/blog/2018/09/10/the-rise-of-non-microservices-architectures/" data-a2a-title="The rise of non-microservices architectures"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/09/10/the-rise-of-non-microservices-architectures/"&gt;The rise of non-microservices architectures&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Baj6QBaxTnA" height="1" width="1" alt=""/&gt;</content><summary>This post is a short summary of my recent experiences with customers that are implementing architectures similar to microservices but with different characteristics in the current post-microservices world. The microservices architectural style has been around for close to five years now, and much has been said and written about it. Today, I see teams deciding not to strictly follow certain princip...</summary><dc:creator>Bilgin Ibryam</dc:creator><dc:date>2018-09-10T13:25:24Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/09/10/the-rise-of-non-microservices-architectures/</feedburner:origLink></entry><entry><title>Tips on how to evaluate STM implementations</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/fvyQVnjA9QQ/tips-on-how-to-evaluate-stm.html" /><category term="feed_group_name_jbosstransactions" scheme="searchisko:content:tags" /><category term="feed_name_transactions" scheme="searchisko:content:tags" /><author><name>Michael Musgrove</name></author><id>searchisko:content:id:jbossorg_blog-tips_on_how_to_evaluate_stm_implementations</id><updated>2018-09-09T19:12:45Z</updated><published>2018-09-09T19:12:00Z</published><content type="html">&lt;head&gt;&lt;link href="https://alexgorbatchev.com/pub/sh/current/styles/shCore.css" rel="stylesheet" type="text/css"&gt;&lt;/link&gt; &lt;link href="https://alexgorbatchev.com/pub/sh/current/styles/shThemeDefault.css" rel="stylesheet" type="text/css"&gt;&lt;/link&gt; &lt;script src="https://alexgorbatchev.com/pub/sh/current/scripts/shCore.js" type="text/javascript"&gt;&lt;/script&gt; &lt;script src="https://alexgorbatchev.com/pub/sh/current/scripts/shBrushCpp.js" type="text/javascript"&gt;&lt;/script&gt; &lt;script src="https://alexgorbatchev.com/pub/sh/current/scripts/shBrushCSharp.js" type="text/javascript"&gt;&lt;/script&gt; &lt;script src="https://alexgorbatchev.com/pub/sh/current/scripts/shBrushCss.js" type="text/javascript"&gt;&lt;/script&gt; &lt;script src="https://alexgorbatchev.com/pub/sh/current/scripts/shBrushJava.js" type="text/javascript"&gt;&lt;/script&gt; &lt;script src="https://alexgorbatchev.com/pub/sh/current/scripts/shBrushJScript.js" type="text/javascript"&gt;&lt;/script&gt; &lt;script src="https://alexgorbatchev.com/pub/sh/current/scripts/shBrushPhp.js" type="text/javascript"&gt;&lt;/script&gt; &lt;script src="https://alexgorbatchev.com/pub/sh/current/scripts/shBrushPython.js" type="text/javascript"&gt;&lt;/script&gt; &lt;script src="https://alexgorbatchev.com/pub/sh/current/scripts/shBrushRuby.js" type="text/javascript"&gt;&lt;/script&gt; &lt;script src="https://alexgorbatchev.com/pub/sh/current/scripts/shBrushSql.js" type="text/javascript"&gt;&lt;/script&gt; &lt;script src="https://alexgorbatchev.com/pub/sh/current/scripts/shBrushVb.js" type="text/javascript"&gt;&lt;/script&gt; &lt;script src="https://alexgorbatchev.com/pub/sh/current/scripts/shBrushXml.js" type="text/javascript"&gt;&lt;/script&gt; &lt;script src="https://alexgorbatchev.com/pub/sh/current/scripts/shBrushPerl.js" type="text/javascript"&gt;&lt;/script&gt; &lt;script language="javascript"&gt; SyntaxHighlighter.config.bloggerMode = true; SyntaxHighlighter.config.clipboardSwf = 'http://alexgorbatchev.com/pub/sh/current/scripts/clipboard.swf'; SyntaxHighlighter.all(); &lt;/script&gt;&lt;/head&gt; Software Transactional Memory (STM) is a way of providing transactional behaviour for threads operating on shared memory. The transaction is an atomic and isolated set of changes to memory such that prior to commit no other thread sees the memory updates and after commit the changes appear to take effect instantaneously so other threads never see partial updates but on abort all of the updates are discarded.&lt;br /&gt;&lt;br /&gt;Unlike other models such as XA, OTS, JTA, WS-AT etc, with STM there is no accepted standard for developers to program against. Consequently the various implementations of STM differ in important respects which have consequences for how application developers build their software. I recently came upon an excellent book on&amp;nbsp;&lt;a href="https://www.morganclaypool.com/doi/abs/10.2200/S00070ED1V01Y200611CAC002"&gt;Transactional Memory&lt;/a&gt;&amp;nbsp;where the authors James Larus and Ravi Rajwar presented a taxonomy of features and characteristics that can be used to differentiate the various STM implementations from each other. In this and subsequent blogs I will explain the taxonomy and identify where the &lt;b&gt;Narayana STM&lt;/b&gt; solution (which was introduced in Mark Little's &lt;a href="http://jbossts.blogspot.com/2011/06/stm-arjuna.html"&gt;initial blog on the topic&lt;/a&gt;)&amp;nbsp;fits into it. Towards the end of the series I will include some tips, best practices and advice on how you can get the most out of the Narayana implementation of STM.&lt;br /&gt;&lt;br /&gt;In this first article I will cover isolation, nesting and exception handling. In later articles I will discuss topics such as conflict detection and resolution, transaction granularity, concurrency control etc. &lt;br /&gt;&lt;br /&gt;By way of motivation, why would one want to use STM in favour of other transaction models and concurrency control mechanisms:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;The STM approach of mutating data inside of a transaction has some nice features:&lt;/li&gt;&lt;ul&gt;&lt;li&gt;It is less error prone since the demarcation of an atomic block of code is primitive but other synchronisation approaches are many and varied. Techniques such as locks, semaphores, signals etc are tricky to get right, for example the programmer must ensure that accesses are protected with the correct locks and in the correct order. With conventional concurrency control, imagine trying reverse all the changes made during a computation if a problem such as deadlock or data race is detected, whereas code changes that are protected by STM can be aborted in a single statement.&lt;/li&gt;&lt;li&gt;Transactional updates make it easier for the programmer to reason about his code (it is clear how different threads affect each other) and data (because it simplifies the sharing of state between threads).&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;ul&gt;&lt;li&gt;The declarative approach (where the programmer simply marks which code blocks are transactional) means concurrent programming is more intuitive with no explicit locks or synchronisation to worry about.&lt;/li&gt;&lt;li&gt;Can perform much better than fine grained locking (which can lead to deadlock) and coarse grained locking (which inhibits concurrency):&lt;/li&gt;&lt;ul&gt;&lt;li&gt;If a thread takes a lock and is context switched or incurs cache misses or page faults etc then other threads that need the lock are stalled until the thread is rescheduled or until the needed data is retrieved.&lt;/li&gt;&lt;li&gt;With STM, updates can be batched up and speculatively committed together.&lt;/li&gt;&lt;li&gt;The runtime manages lock acquisition and release and resolves conflicts (using approaches such as timeouts and retries).&lt;/li&gt;&lt;/ul&gt;&lt;li&gt;It is easier to compose operations&amp;nbsp;using a technique called nesting&amp;nbsp;(traditionally composing two operations can produce concurrency problems unless one analyses in detail the locking approach used by those operations).&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;h2&gt;Properties of a STM system&lt;/h2&gt;&lt;/div&gt;In the following I will describe the design choices available to STM systems in general and in particular I will illustrate the choices made by the&amp;nbsp;&lt;b&gt;Narayana STM&lt;/b&gt; implementation using code examples. The examples &lt;a href="https://issues.jboss.org/browse/JBTM-3058"&gt;will be made available&lt;/a&gt; in the &lt;b&gt;Narayana STM&lt;/b&gt; test suite so that you can also experiment with the particular properties of the implementation. Each of the examples will be using the same transactional object which is defined as follows:&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;pre class="brush: java"&gt; @Transactional&lt;br /&gt; public interface AtomicInt {&lt;br /&gt; int get() throws Exception;&lt;br /&gt; void set(int value) throws Exception;&lt;br /&gt; }&lt;br /&gt;&lt;br /&gt; public class AtomicIntImpl implements AtomicInt {&lt;br /&gt; private int state;&lt;br /&gt;&lt;br /&gt; @ReadLock&lt;br /&gt; public int get() throws Exception {&lt;br /&gt; return state;&lt;br /&gt; }&lt;br /&gt;&lt;br /&gt; @WriteLock&lt;br /&gt; public void set(int value) throws Exception {&lt;br /&gt; state = value;&lt;br /&gt; }&lt;br /&gt; }&lt;br /&gt;&lt;/pre&gt;&lt;br /&gt;The @Transactional annotation on the AtomicInt interface tells the system that instances of the interface are candidates to be managed by the STM system. The implementation of the interface defines a pair of methods for reading and writing the the shared state (by default all state is tracked but this default can be overridden via the @NotState annotation).&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Property 1: Interaction with non transactional code&lt;/h3&gt;If uncommitted transactional memory updates are visible to non-transactional code and vice-versa (i.e. updates made by non-transactional code are visible to running transactions) then the isolation model is said to be weak. On the other hand if non-transactional accesses are upgraded to a transactional access then the model is said to be strong.&lt;br /&gt;&lt;br /&gt;The weak access model, although common, can lead to data races. A data race occurs if two threads T1 and T2 access memory, T1 for writing, say, and the other for reading then the value of the memory read is indeterminate. If, for example T1 writes data inside a transaction and T2 reads that data, then if T1 aborts but T2 has made a decision based on the value it read then we have an incorrect program since aborted transactions must not have side effects (recall the "all or nothing" characteristic of atomicity).&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Narayana STM&lt;/b&gt; follows the weak isolation model. The following test updates shared memory inside a transaction and then triggers a thread to perform non-transactional reads and writes on it while the transaction is still running. The test shows that the two threads interfere with each other producing indeterminate results:&lt;br /&gt;&lt;pre class="brush: java"&gt; public void testWeakIsolation() throws Exception {&lt;br /&gt; AtomicIntImpl aiImple = new AtomicIntImpl();&lt;br /&gt; // STM is managed by Containers. Enlisting the above implementation&lt;br /&gt; // with the container returns a proxy which will enforce STM semantics&lt;br /&gt; AtomicInt ai = new RecoverableContainer&lt;atomicint&gt;().enlist(aiImple);&lt;br /&gt; AtomicAction tx = new AtomicAction();&lt;br /&gt;&lt;br /&gt; // set up the code that will access the memory outside of a transaction&lt;br /&gt; Thread ot = new Thread(() -&amp;gt; {&lt;br /&gt; try {&lt;br /&gt; synchronized (tx) {&lt;br /&gt; tx.wait(); // for the other thread to start a transaction&lt;br /&gt;&lt;br /&gt; // weak isolation implies that this thread (which is running&lt;br /&gt; // outside of a transaction) can observe transactional updates&lt;br /&gt; assertEquals(2, aiImple.get()); // the other thread set it to 2&lt;br /&gt; aiImple.set(10); // this update is visible to transactional code&lt;br /&gt; } catch (Exception e) {&lt;br /&gt; e.printStackTrace();&lt;br /&gt; }&lt;br /&gt; });&lt;br /&gt;&lt;br /&gt; ot.start();&lt;br /&gt;&lt;br /&gt; ai.set(1); // initialise the shared memory&lt;br /&gt; tx.begin(); // start a transaction&lt;br /&gt; {&lt;br /&gt; ai.set(2); // conditionally set the value to 2&lt;br /&gt;&lt;br /&gt; synchronized (tx) {&lt;br /&gt; tx.notify(); // trigger non-transactional code to update the memory&lt;br /&gt; }&lt;br /&gt;&lt;br /&gt; // weak isolation means that this transactional code may see the&lt;br /&gt; // changes made by the non transactional code&lt;br /&gt; assertEquals(10, ai.get()); // the other thread set it to 10&lt;br /&gt; tx.commit(); // commit the changes made to the shared memory&lt;br /&gt; }&lt;br /&gt;&lt;br /&gt; // changes made by non transactional code are still visible after commit&lt;br /&gt; assertEquals(10, ai.get());&lt;br /&gt; assertEquals(aiImple.get(), ai.get());&lt;br /&gt; }&lt;br /&gt;&lt;/atomicint&gt;&lt;/pre&gt;&lt;div&gt;&lt;br /&gt;As an aside, notice in this example that the code first had to declare the shared data using the @Transactional annotation and then had to access it via a proxy returned from a RecoverableContainer. Some systems introduce new keywords into the language that demarcate the atomic blocks and in such systems any memory updates made by the atomic block would be managed by the STM implementation. That type of system takes some of the burden of ensuring correctness away from the programmer but are harder to implement (for example a common technique requires compiler extensions).&lt;br /&gt;&lt;br /&gt;&lt;h3&gt;Property 2: Nested transactions&lt;/h3&gt;&lt;div&gt;A nested transaction (the child) is one that is started in the context of an outer one (the parent). The child sees the changes made by the parent. Aborting the parent will abort each child. A parent that does not have any parents is called top level.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The effects of committing/aborting either transaction (the child or parent) and the visibility of changes depend upon which model is being used:&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;h4&gt;Flattened:&lt;/h4&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;The parent and child transactions see each others updates.&lt;/li&gt;&lt;li&gt;If the child aborts the parent aborts too.&lt;/li&gt;&lt;li&gt;Changes made by the child only become visible to other threads when the parent commits&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;Pros - easy to implement&lt;/div&gt;&lt;div&gt;Cons - breaks composition (if the child aborts it causes all work done by the parent transaction to abort)&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;h4&gt;Closed Nested&lt;/h4&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;Changes are hidden from the parent transaction (and from other transactions) until the child commits, at which time any changes made by the child become part of the parent transactions' set of updates (therefore, in contrast to open nested transactions, other transactions will not see the updates until the parent commits);&lt;/li&gt;&lt;li&gt;aborting the child does not abort the parent;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;Pros - Is arguably the most natural model for application designers&lt;br /&gt;&lt;br /&gt;&lt;h4&gt;Open Nested&lt;/h4&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;When the child transaction commits, all other transactions&amp;nbsp;see the updates even if the parent aborts which is useful if we want unrelated code to make permanent changes during the transaction even if the parent aborts.&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;Pros - enables work to be made permanent even if the parent aborts (for example logging code made by the child)&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;b&gt;Narayana STM&lt;/b&gt; follows the closed model as is demonstrated by the following test case:&lt;/div&gt;&lt;pre class="brush: java"&gt; public void testIsClosedNestedCommit() throws Exception {&lt;br /&gt; AtomicInt ai = new RecoverableContainer&lt;atomicint&gt;().enlist(new AtomicIntImpl());&lt;br /&gt; AtomicAction parent = new AtomicAction();&lt;br /&gt; AtomicAction child = new AtomicAction();&lt;br /&gt;&lt;br /&gt; ai.set(1); // initialise the shared memory&lt;br /&gt; parent.begin(); // start a top level transaction&lt;br /&gt; {&lt;br /&gt; ai.set(2); // update the memory in the context of the parent transaction&lt;br /&gt; child.begin(); // start a child transaction&lt;br /&gt; {&lt;br /&gt; ai.set(3); // update the memory in a child transaction&lt;br /&gt; // NB the parent would still see the value as 2&lt;br /&gt; // (not shown in this test)&lt;br /&gt; child.commit();&lt;br /&gt; }&lt;br /&gt; // since the child committed the parent should see the value as 3&lt;br /&gt; assertEquals(3, ai.get());&lt;br /&gt; // NB other transactions would not see the value 3 however until&lt;br /&gt; // the parent commits (not demonstrated in this test)&lt;br /&gt; }&lt;br /&gt; parent.commit();&lt;br /&gt;&lt;br /&gt; assertEquals(3, ai.get());&lt;br /&gt; }&lt;br /&gt;&lt;/atomicint&gt;&lt;/pre&gt;&lt;h4&gt;Isolation amongst child transactions&lt;/h4&gt;&lt;div&gt;The concept of isolation applies to nested transactions as well as to top level transactions. It seems most natural for siblings to use the same model as is used for isolation with respect to other transactions (ie transactions that are not in ancestor hierarchy of a particular child). For example the CORBA Object Transaction Service (OTS) supports the closed model and children do not see each others updates until the parent commits.&lt;/div&gt;&lt;/div&gt;&lt;br /&gt;&lt;h3&gt;Property 3: Exception Handling&lt;/h3&gt;&lt;div&gt;On exception the options are to either terminate or ignore the exception or to use a mixture of both where the programmer tells the system which exceptions should abort and which ones should commit the transaction which is similar to what the JTA 1.2 spec provides with its &lt;i&gt;rollbackOn&lt;/i&gt; and &lt;i&gt;dontRollbackOn&lt;/i&gt; annotation attributes.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The &lt;b&gt;Narayana STM&lt;/b&gt;&amp;nbsp;implementation takes the view that the programmer is best placed to make decisions about what to do under exceptional circumstances. The following test demonstrates this behaviour:&lt;br /&gt;&lt;pre class="brush: java"&gt; public void testExceptionDoesNotAbort() throws Exception {&lt;br /&gt; AtomicInt ai = new RecoverableContainer&lt;atomicint&gt;().enlist(new AtomicIntImpl());&lt;br /&gt; AtomicAction tx = new AtomicAction();&lt;br /&gt;&lt;br /&gt; ai.set(1);&lt;br /&gt; tx.begin();&lt;br /&gt; {&lt;br /&gt; try {&lt;br /&gt; ai.set(2);&lt;br /&gt; throw new Exception();&lt;br /&gt; } catch (Exception e) {&lt;br /&gt; assertEquals(2, ai.get());&lt;br /&gt; // the transaction should still be active&lt;br /&gt; ai.set(3);&lt;br /&gt; tx.commit();&lt;br /&gt; }&lt;br /&gt; }&lt;br /&gt;&lt;br /&gt; assertEquals(3, ai.get());&lt;br /&gt; }&lt;br /&gt;&lt;/atomicint&gt;&lt;/pre&gt;&lt;br /&gt;&lt;h2&gt;What's Next&lt;/h2&gt;That's all for this week. In the next instalment I will cover conflict detection and resolution, transaction granularity and concurrency control.&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/fvyQVnjA9QQ" height="1" width="1" alt=""/&gt;</content><summary>Software Transactional Memory (STM) is a way of providing transactional behaviour for threads operating on shared memory. The transaction is an atomic and isolated set of changes to memory such that prior to commit no other thread sees the memory updates and after commit the changes appear to take effect instantaneously so other threads never see partial updates but on abort all of the updates are...</summary><dc:creator>Michael Musgrove</dc:creator><dc:date>2018-09-09T19:12:00Z</dc:date><feedburner:origLink>http://jbossts.blogspot.com/2018/09/tips-on-how-to-evaluate-stm.html</feedburner:origLink></entry><entry><title>This week (month) in JBoss (8th September 2018): Catching up from vacation</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/TQPLpezINXM/this-week-month-in-jboss-8th-september-2018-catching-up-from-vacation" /><category term="a-mq 6.3" scheme="searchisko:content:tags" /><category term="Apiman" scheme="searchisko:content:tags" /><category term="business process management" scheme="searchisko:content:tags" /><category term="Camel" scheme="searchisko:content:tags" /><category term="eap 7" scheme="searchisko:content:tags" /><category term="Elytron" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_weeklyeditorial" scheme="searchisko:content:tags" /><category term="GraalVM" scheme="searchisko:content:tags" /><category term="Hibernate" scheme="searchisko:content:tags" /><category term="infinispan" scheme="searchisko:content:tags" /><category term="istio" scheme="searchisko:content:tags" /><category term="jberet" scheme="searchisko:content:tags" /><category term="keycloak" scheme="searchisko:content:tags" /><category term="news" scheme="searchisko:content:tags" /><category term="optaplanner" scheme="searchisko:content:tags" /><category term="resteasy" scheme="searchisko:content:tags" /><category term="service mesh" scheme="searchisko:content:tags" /><category term="thorntail" scheme="searchisko:content:tags" /><category term="three4g" scheme="searchisko:content:tags" /><category term="weekly_editorial" scheme="searchisko:content:tags" /><category term="weekly_update" scheme="searchisko:content:tags" /><category term="wildfly" scheme="searchisko:content:tags" /><author><name>Kevin Conner</name></author><id>searchisko:content:id:jbossorg_blog-this_week_month_in_jboss_8th_september_2018_catching_up_from_vacation</id><updated>2018-09-08T17:55:15Z</updated><published>2018-09-08T17:55:15Z</published><content type="html">&lt;!-- [DocumentBodyStart:7754e8c3-56c8-49e8-9c70-09d433033269] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;p&gt;Welcome to another edition of the JBoss Editorial, this edition covering articles which have been posted in the community over the last month while many of us have been on vacation.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Application Safety, Correctness and their relationship to Service Mesh&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Service Meshes in general, and Istio in particular, have gathered a lot of momentum over the last few years with their appeal to developers being the ability to support robustness, tracing, traffic management, security etc. thereby removing much of the implementation complexity from the applications themselves.&amp;#160; While these service meshes allow much to be offloaded, simplifying the application developer's task, they do not remove the responsibility for ensuring the correctness and safety of the application from the developer.&amp;#160; Christian has been working with the Istio community for a long time and is often asked about this topic, &lt;a class="jive-link-external-small" href="http://blog.christianposta.com/microservices/application-safety-and-correctness-cannot-be-offloaded-to-istio-or-any-service-mesh/" rel="nofollow"&gt;for a better understanding of why the application cannot cede responsibility to the service mesh checkout his post on Application Safety and Correctness where he tackles this topic in great detail&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Kubernetes and Application Servers&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;In the first of a series of articles &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/09/05/kubernetes-new-operating-environment/" rel="nofollow"&gt;comparing the role of Kubernetes and Application Servers, Ken lays the groundwork by posing some questions on the future of application servers and introducing containers and how they are beneficial for applications&lt;/a&gt;.&amp;#160; The next articles in the series will delve deeper into this topic, exploring the problem space applications servers are intended to solve and provide comparisons with Kubernetes.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Integrating A-MQ 6.3 with JBoss EAP 7&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;The Red Hat JBoss EAP 7 application server comes with an embeddable message broker, ActiveMQ Artemis, which provides support for the JMS API however this is not the only option for supporting the JMS feature set.&amp;#160; Through integration with JCA resource adapters the JBoss EAP 7 application server can be configured to use an external broker, such as A-MQ 6.3, to support the JMS requirements.&amp;#160; &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/08/20/how-to-integrate-a-mq-6-3-on-red-hat-jboss-eap-7/" rel="nofollow"&gt;The necessary changes are easy to make and are ably demonstrated by Abraham who covers not only the configuration but also provides an overview of the components and an overview of how the integration works&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Securing Apps and Services with Keycloak&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;The recording of the latest DevNation Live session, Securing apps and services with Keycloak, is now available for watching online.&amp;#160; &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/08/28/securing-apps-and-services-with-keycloak/" rel="nofollow"&gt;In this session Stian discusses OpenID Connect vs SAML, how to secure applications and services, data and process flows for securing various types of applications and present examples covering HTML5/JavaScript, PHP and REST services with Node.js&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Managing Certificates from Lets' Encrypt using the WildFly CLI&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Farah has written a great post discussing &lt;a class="jive-link-blog-small" data-containerId="5158" data-containerType="37" data-objectId="6222" data-objectType="38" href="https://developer.jboss.org/people/fjuma/blog/2018/08/31/obtaining-certificates-from-lets-encrypt-using-the-wildfly-cli"&gt;the new support available in WildFly for obtaining, revoking and checking certificates from Lets' Encrypt&lt;/a&gt;.&amp;#160; Through simple CLI instructions you can now ensure your application server is secured using free certificates trusted by all major certificate chains.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;WildFly Swarm becomes Thorntail and Introduction to SmallRye&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;There have been a number of significant changes in the MicroProfile work over the last few months, not least of which are the change in name from WildFly Swarm to Thorntail, after much feedback from the community, and the creation of a community driven, vendor neutral project hosting implementations of the various MicroProfile specifications.&amp;#160; For more information checkout Antoine's post &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/08/23/eclipse-microprofile-and-red-hat-update-thorntail-and-smallrye/" rel="nofollow"&gt;where he provides more background on the changes and covers what will be happening next with the Thorntail team&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Generate News Automatically with Apache Camel and WordPress&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;The recent release of Apache Camel 2.21 introduced a new Camel WorkPress component allowing camel routes to publish articles to WordPress; when combining this new component with Natural Language Generation this creates the ability to automatically generate articles and publish them to sites.&amp;#160; &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/08/27/camel-wordpress-integration/" rel="nofollow"&gt;This topic is of great interest to Ricardo who has created a simple demonstration showing how soccer news can be generated and published automatically&lt;/a&gt;.&amp;#160; The demo is simple and leaves scope for exploration especially if you are interested in other topics such as Artificial Intelligence.&amp;#160; Have fun playing around &lt;span aria-label="Happy" class="emoticon_happy emoticon-inline" style="height:16px;width:16px;"&gt;&lt;/span&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Hibernate Community Newsletter&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;In &lt;a class="jive-link-external-small" href="http://in.relation.to/2018/08/21/hibernate-community-newsletter-2018-16/" rel="nofollow"&gt;Hibernate Community Newsletter 16/2018&lt;/a&gt; you will find articles explaining how the JPA Persistence Context works, how catalog based multi-tenancy works and why you should consider it, a tutorial showing how to develop a JPA and Hibernate application using Kotlin, how to use Spring and Ehcache as a second level cache and how you can use Hibernate ORM with the CData JDBC Driver for Redis as an alternative to Hibernate OGM.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;In &lt;a class="jive-link-external-small" href="http://in.relation.to/2018/09/03/hibernate-community-newsletter-2018-17/" rel="nofollow"&gt;Hibernate Community Newsletter 17/2018&lt;/a&gt; you will find articles discussing how to handle the &lt;em&gt;No Dialect mapping for JDBC type&lt;/em&gt; issue, an explanation of how optimistic locking works with JPA and Hibernate, an article on Hibernate Search, how to support multi-tenancy using catalog and scheme based multi-tenancy, an introduction to how table relationships are mapped and a demonstration of entity attribute validation using the Hibernate Validator project.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Data Reconciliation with Digital Process Automation&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Automation processes involve the collection and processing of data from numerous sources, both automated and human, and can often lead to inconsistencies within the data due to inaccurate input, mis-aligned processes, outdated information etc. and create challenges for the organisation.&amp;#160; The process developer may have the option to unwind the process to preserve data integrity however it is often necessary to incorporate a reconciliation step allowing the organisation to define how data inconsistencies will be resolved.&amp;#160; In his article on this topic &lt;a class="jive-link-external-small" href="https://developers.redhat.com/blog/2018/08/22/reducing-data-inconsistencies-with-red-hat-process-automation-manager/" rel="nofollow"&gt;Donato discusses the options available to the process developer, starting with the traditional approach of handling the communication through a sub process and then proposing a more flexible, and less intrusive approach using decorators.&lt;/a&gt;&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;OptaPlanner Unit Testing using Excel or LibreOffice&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;When developing unit tests for business constraints we often develop test cases consisting mainly of boilerplate code resulting in test cases which may not be as intelligible as we would like, may not accurately represent the business constraints explained to us by the business experts, or may reflect a misunderstanding of the constraints.&amp;#160; Ideally we would like the business experts to define these test cases using tools with which they are comfortable and which provide more clarity.&amp;#160; &lt;a class="jive-link-external-small" href="https://www.optaplanner.org/blog/2018/08/21/UnitTestingConstraintsWithBusinessInputFromExcelOrLibreOffice.html" rel="nofollow"&gt;Musa described one solution to this challenge, allow the business experts to define their use cases using spreadsheets and the developers to focus on the implementation of the constraints&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;Batch Processing with JBeret and Red Hat Developer Studio&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Developing batch applications has come a long way over the last few years, with the introduction of the JSR 352 java standard and support in IDEs such as Red Hat Developer Studio it is now much simpler to develop batch applications and deploy them to application servers such as WildFly.&amp;#160; To demonstrate how simple it now is, &lt;a class="jive-link-blog-small" data-containerId="5311" data-containerType="37" data-objectId="6219" data-objectType="38" href="https://developer.jboss.org/community/jberet/blog/2018/08/12/develop-batch-applications-with-red-hat-developer-studio"&gt;Cheng takes us through the necessary steps for creating a simple batch processing application, deploying the application into WildFly and performing batch processing operations&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;RESTEasy Tracing Now Supports JSON&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Weinan recently wrote an article &lt;a class="jive-link-blog-small" data-containerId="1100" data-containerType="37" data-objectId="6223" data-objectType="38" href="https://developer.jboss.org/community/resteasy/blog/2018/09/05/resteasy-tracing-feature-now-supports-json-formatted-information"&gt;introducing a new capability of the RESTEasy Tracing feature, the ability to return tracing information in JSON format&lt;/a&gt; to enable easier processing of tracing information by applications.&amp;#160; This capability is currently available through their 4.0.0-SNAPSHOT builds and expands on the existing Tracing feature which returns the tracing information using a human readable text-based format.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;GraalVM and Camel&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Luca has been playing around recently with the GraalVM and exploring how to create a native image in order to run Camel routes in JavaScript, &lt;a class="jive-link-external-small" href="https://lburgazzoli.github.io/2018/09/04/Adventures-in-GraalVM-polyglot-Camel-routes-with-native-image.html" rel="nofollow"&gt;for more details and a link to his example checkout his post where he demonstrates how this can be achieved&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;JBoss Out and About&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Eric Schabell is continuing his travels, having recently &lt;a class="jive-link-external-small" href="http://www.schabell.org/2018/08/red-hat-partner-community-meetup-netherlands.html" rel="nofollow"&gt;presented at the Red Hat Partner Community Meetup in the Netherlands, where he gave a preview on the application development product portfolio, timelines and what is driving their future development,&lt;/a&gt; Eric will shortly be heading for the &lt;a class="jive-link-external-small" href="https://allthingsopen.org/" rel="nofollow"&gt;All Things Open&lt;/a&gt; conference in Raleigh where he will &lt;a class="jive-link-external-small" href="http://www.schabell.org/2018/08/all-things-open-2018-10-steps-cloud-happiness.html" rel="nofollow"&gt;give his presentation entitled &lt;em&gt;10 Steps to Cloud Happiness&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Next week also sees &lt;a class="jive-link-external-small" href="http://dandreadis.blogspot.com/2018/09/lets-meet-at-red-hat-forum-2018-in.html" rel="nofollow"&gt;Dimitris, Pavol, Michael and Erik present at the Red Hat Forum 2018 in Zurich where they will be covering topics such as Istio Mesh, the future of Enterprise Java and teaching programming using Minecraft and OpenShift&lt;/a&gt; and also includes a keynote session by Jim Whitehurst, Red Hat's CEO.&amp;#160; The event is free so &lt;a class="jive-link-external-small" href="https://www.redhat.com/en/events/forum-switzerland" rel="nofollow"&gt;register now&lt;/a&gt; if you are interested in attending.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;h2&gt;New Releases&lt;/h2&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The &lt;a class="jive-link-external-small" href="https://resteasy.github.io/" rel="nofollow"&gt;RESTEasy&lt;/a&gt; team released &lt;a class="jive-link-blog-small" data-containerId="1100" data-containerType="37" data-objectId="6215" data-objectType="38" href="https://developer.jboss.org/community/resteasy/blog/2018/08/09/resteasy-release-week"&gt;RESTEasy 3.6.1.Final, RESTEasy 4.0.0.Beta5 and resteasy-spring-boot-starter 2.0.1.Final&lt;/a&gt;.&lt;/li&gt;&lt;li&gt;The &lt;a class="jive-link-external-small" href="http://hibernate.org/" rel="nofollow"&gt;Hibernate&lt;/a&gt; team released&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2018/08/13/hibernate-validator-6012-final-out/" rel="nofollow"&gt;Hibernate Validator 6.0.12.Final&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2018/08/14/hibernate-orm-535-final-out/" rel="nofollow"&gt;Hibernate ORM 5.3.5.Final&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://in.relation.to/2018/08/23/hibernate-validator-6013-final-out/" rel="nofollow"&gt;Hibernate Validator 6.0.13.Final&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;The &lt;a class="jive-link-external-small" href="http://apiman.io/" rel="nofollow"&gt;Apiman&lt;/a&gt; team released &lt;a class="jive-link-external-small" href="http://www.apiman.io/blog/apiman/release/2018/08/13/release-1.5.html" rel="nofollow"&gt;Apiman 1.5.1.Final&lt;/a&gt;&lt;/li&gt;&lt;li&gt;The &lt;a class="jive-link-external-small" href="http://infinispan.org/" rel="nofollow"&gt;Infinispan&lt;/a&gt; team released&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="https://blog.infinispan.org/2018/08/hotrod-clients-c-and-c-830beta1-are-out.html" rel="nofollow"&gt;Hotrod clients C++ and C# 8.3.0.Beta1&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="https://blog.infinispan.org/2018/08/infinispan-940cr1-is-out.html" rel="nofollow"&gt;Infinispan 9.4.0.CR1&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="https://blog.infinispan.org/2018/08/infinispan-932final-and-940cr2-are-out.html" rel="nofollow"&gt;Infinispan 9.3.2.Final and 9.4.0.CR2&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="https://blog.infinispan.org/2018/09/infinispan-spring-boot-beta2-is-out.html" rel="nofollow"&gt;Infinispan Spring Boot Beta2&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;The &lt;a class="jive-link-external-small" href="https://thorntail.io/" rel="nofollow"&gt;Thorntail&lt;/a&gt; team released&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://wildfly-swarm.io/posts/announcing-thorntail-2-1-0-final/" rel="nofollow"&gt;Thorntail 2.1.0.Final&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://wildfly-swarm.io/posts/announcing-thorntail-2-2-0-final/" rel="nofollow"&gt;Thorntail 2.2.0.Final&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;The &lt;a class="jive-link-external-small" href="https://www.keycloak.org/" rel="nofollow"&gt;Keycloak&lt;/a&gt; team released&lt;ul&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://blog.keycloak.org/2018/08/keycloak-430final-released.html" rel="nofollow"&gt;Keycloak 4.3.0.Final&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a class="jive-link-external-small" href="http://blog.keycloak.org/2018/09/keycloak-440final-released.html" rel="nofollow"&gt;Keycloak 4.4.0.Final&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;The &lt;a class="jive-link-external-small" href="http://wildfly.org/" rel="nofollow"&gt;WildFly&lt;/a&gt; team released &lt;a class="jive-link-external-small" href="http://wildfly.org/news/2018/08/30/WildFly14-Final-Released/" rel="nofollow"&gt;WildFly 14 Final&lt;/a&gt;&lt;/li&gt;&lt;li&gt;The Three4G team released the &lt;a class="jive-link-external-small" href="https://twitter.com/treblereel/status/1035482025522806784" rel="nofollow"&gt;first version of their GWT library wrapping the three.js 3D library&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;That's all for this instalment, please join us next time for another spin through the JBoss Communities in search of more news, articles and releases&lt;/p&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:7754e8c3-56c8-49e8-9c70-09d433033269] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/TQPLpezINXM" height="1" width="1" alt=""/&gt;</content><summary>Welcome to another edition of the JBoss Editorial, this edition covering articles which have been posted in the community over the last month while many of us have been on vacation.   Application Safety, Correctness and their relationship to Service Mesh   Service Meshes in general, and Istio in particular, have gathered a lot of momentum over the last few years with their appeal to developers bei...</summary><dc:creator>Kevin Conner</dc:creator><dc:date>2018-09-08T17:55:15Z</dc:date><feedburner:origLink>https://developer.jboss.org/blogs/weekly-editorial/2018/09/08/this-week-month-in-jboss-8th-september-2018-catching-up-from-vacation</feedburner:origLink></entry><entry><title>Keycloak 4.4.0.Final Released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/42WRlLoaj4Q/keycloak-440final-released.html" /><category term="feed_group_name_keycloak" scheme="searchisko:content:tags" /><category term="feed_name_keycloak" scheme="searchisko:content:tags" /><author><name>Stian Thorgersen</name></author><id>searchisko:content:id:jbossorg_blog-keycloak_4_4_0_final_released</id><updated>2018-09-07T06:19:24Z</updated><published>2018-09-07T06:19:00Z</published><content type="html">&lt;p&gt;To download the release go to the &lt;a href="http://www.keycloak.org/downloads"&gt;Keycloak homepage&lt;/a&gt;. &lt;p&gt;For details on what is included in the release check out the &lt;a href="https://www.keycloak.org/docs/latest/release_notes/index.html"&gt;Release notes&lt;/a&gt; &lt;p&gt;The full list of resolved issues is available in &lt;a href="https://issues.jboss.org/issues/?jql=project%20%3D%20keycloak%20and%20fixVersion%20%3D%204.4.0.Final"&gt;JIRA&lt;/a&gt;. &lt;p&gt;Before you upgrade remember to backup your database and check the &lt;a href="http://www.keycloak.org/docs/latest/upgrading/index.html"&gt;upgrade guide&lt;/a&gt; for anything that may have changed.&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/42WRlLoaj4Q" height="1" width="1" alt=""/&gt;</content><summary>To download the release go to the Keycloak homepage. For details on what is included in the release check out the Release notes The full list of resolved issues is available in JIRA. Before you upgrade remember to backup your database and check the upgrade guide for anything that may have changed.</summary><dc:creator>Stian Thorgersen</dc:creator><dc:date>2018-09-07T06:19:00Z</dc:date><feedburner:origLink>http://blog.keycloak.org/2018/09/keycloak-440final-released.html</feedburner:origLink></entry><entry><title>Let's meet at the Red Hat Forum 2018 in Zurich!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/8hNU2DuPxQQ/lets-meet-at-red-hat-forum-2018-in.html" /><category term="conference" scheme="searchisko:content:tags" /><category term="english" scheme="searchisko:content:tags" /><category term="feed_group_name_jbossas" scheme="searchisko:content:tags" /><category term="feed_name_dimitris" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="middleware" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="opensource" scheme="searchisko:content:tags" /><category term="redhatforum" scheme="searchisko:content:tags" /><category term="zurich" scheme="searchisko:content:tags" /><author><name>Dimitris Andreadis</name></author><id>searchisko:content:id:jbossorg_blog-let_s_meet_at_the_red_hat_forum_2018_in_zurich</id><updated>2018-09-06T15:12:43Z</updated><published>2018-09-06T15:12:43Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;September 11th is a difficult date to forget, however, this time for a good reason: it's the day the &lt;a href="https://www.redhat.com/en/events/forum-switzerland"&gt;Red Hat Forum 2018&lt;/a&gt; will take place at the &lt;a href="https://www.arena.ch/de/sihlcity/ueber-uns/anfahrt"&gt;Arena Cinemas&lt;/a&gt; in Zurich. For those that have attended the RH Forum in previous years you already know it's the place to be and it's just getting better every year. For those that haven't been there, I suggest you take a look at the &lt;a href="https://www.redhat.com/en/events/forum-switzerland#event-tab-1"&gt;Agenda&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;It's a full day event with keynotes and panel sessions happening before lunch. This year we are lucky to have &lt;a href="https://www.linkedin.com/in/jiwhitehurst/"&gt;Jim Whitehurst&lt;/a&gt;, Red Hat's President &amp;amp; CEO keynoting on &lt;i&gt;Digital Transformation&lt;/i&gt; and how &lt;i&gt;Red Hat's open culture&lt;/i&gt; can help you perform this journey. There are other very interesting sessions (many in English!) with leading customers and partners sharing their experiences, including Swisscom, Accenture, SBB, SAP and Microsoft (with whom we are best friends now!), as well as &lt;a href="http://www.kikimaeder.com/"&gt;Kiki&lt;/a&gt; wearing something red and helping our Country Manager &lt;a href="https://www.linkedin.com/in/l%C3%A9onard-bodmer-88a5a71/"&gt;Léonard Bodmer&lt;/a&gt; run the show. :)&lt;br /&gt;&lt;br /&gt;In the afternoon we split into four parallel tracks with case studies and technical presentations taking place in the cinema rooms. There are very interesting topics presented from customers and partners and I suggest you first take a look at them, but if you are more into tech stuff you may just as well join as at the &lt;b&gt;Red Hat Technology Deep Dive Track&lt;/b&gt; that--with the help of &lt;a href="https://www.linkedin.com/in/theute/"&gt;Thomas Heute&lt;/a&gt;--we've organized this year, as follow:&lt;br /&gt;&lt;b&gt;&lt;/b&gt;&lt;br /&gt;&lt;ol style="text-align: left;"&gt;&lt;li&gt;&lt;b&gt;&amp;nbsp;&lt;/b&gt;&lt;a href="https://www.linkedin.com/in/pavolloffay/"&gt;Pavol Loffay&lt;/a&gt;, speaking on very practical aspects of &lt;b&gt;"Observability with Istio Mess"&lt;/b&gt;.&lt;br /&gt;&lt;br /&gt;In this presentation we will walk you through telemetry integration in Istio service mesh. You will learn how observability pillars like metrics and traces are nicely provided by the mesh and in addition to that how services themselves can enrich this information. We will be demoing Kiali, Prometheus and Jaeger on an OpenShift environment.&lt;/li&gt;&lt;li&gt;&amp;nbsp;&lt;a href="https://www.linkedin.com/in/dandreadis/"&gt;Yours Truly&lt;/a&gt;, on the future of Enterprise Java - &lt;b&gt;"Java EE is Dead! Long Live Jakarta EE!"&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Last's year events were cataclysmic for Enterprise Java: Java EE 8 was released, the MicroProfile project produced 2 releases and 7 new microservices focused APIs, and both of them moved over to the Eclipse Foundation with Oracle choosing to open source everything! What has happened? Jakarta EE, the successor to Java EE, is alive and kicking and aims at aligning Enterprise Java to the fast pacing reality of a brave new Cloud Native world. Why this is important to you and what you can do about it? Come to this session to find out.&lt;/li&gt;&lt;li&gt;&lt;a href="https://www.linkedin.com/in/vorburger/"&gt;Michael Vorburger&lt;/a&gt; &amp;amp; &lt;a href="https://www.linkedin.com/in/erik-jan-de-wit-aba255/"&gt;Erik Jan de Wit&lt;/a&gt; on a super fun joint presentation showcasing a way of &lt;b&gt;"Teaching Programming using Minecraft on OpenShift"&lt;/b&gt;.&lt;br /&gt;&lt;br /&gt;Computers used to be these "magical tinkering machines" when we were younger. Today, the challenge is to get children excited about learning programming by reducing the time to set up and get started right away in a gamified environment they already love - like Minecraft! We'll show you how with Kubernetes, OpenShift and Minecraft we can progressively do just - at first using our ScratchX extension to get started with graphical programming, and then with a push of a button go to a full development environment set up to start learning and teaching programming. We'll set up an Eclipse Che IDE with continuous builds of the modifications, and a Minecraft server with our OSGi extension that hot reload changes. All code used in the demo of this project is open source and available to anyone.&lt;/li&gt;&lt;/ol&gt;All fours presenters are based out of Switzerland, are deeply involved with Red Hat product development and would gladly meet with you (and the Geek inside you) at the technical track or the Red Hat booth, to talk about the projects/products we are working on and just about anything Open Source. We would also be very interested to listen to your concerns and experiences with them, as well as hear about any interesting projects you are working on.&lt;br /&gt;&lt;br /&gt;We are just one week before the event so if you haven't already registered to attend the Red Hat Forum (which I should mention is free, as in beer, thanks to our beloved Partners), I suggest you do so ASAP and &lt;a href="https://www.redhat.com/en/events/forum-switzerland"&gt;register now&lt;/a&gt; - there might still be some available slots, so hurry up!&lt;br /&gt;&lt;br /&gt;See you in Zurich!&lt;br /&gt;&lt;br /&gt;/&lt;a href="https://dandreadis.blogspot.com/"&gt;Dimitris&lt;/a&gt;&lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/8hNU2DuPxQQ" height="1" width="1" alt=""/&gt;</content><summary>September 11th is a difficult date to forget, however, this time for a good reason: it's the day the Red Hat Forum 2018 will take place at the Arena Cinemas in Zurich. For those that have attended the RH Forum in previous years you already know it's the place to be and it's just getting better every year. For those that haven't been there, I suggest you take a look at the Agenda. It's a full day e...</summary><dc:creator>Dimitris Andreadis</dc:creator><dc:date>2018-09-06T15:12:43Z</dc:date><feedburner:origLink>http://dandreadis.blogspot.com/2018/09/lets-meet-at-red-hat-forum-2018-in.html</feedburner:origLink></entry><entry><title>Evangelist traveller tales - Retiring my old friend</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Yug7zvl3-is/evangelist-traveller-tales-retiring-my-old-friend.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="Automate" scheme="searchisko:content:tags" /><category term="BPM Suite" scheme="searchisko:content:tags" /><category term="bpmPaaS" scheme="searchisko:content:tags" /><category term="BRMS" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="xpaas" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-evangelist_traveller_tales_retiring_my_old_friend</id><updated>2018-09-06T11:41:36Z</updated><published>2018-09-06T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;a href="https://3.bp.blogspot.com/-eXoE6CcAhCU/W5EPQu-dLnI/AAAAAAAAtCI/zJsBLC7rjpcufrOxtJ2fPf9qEQ7_9G-0wCLcBGAs/s1600/3VgsPhUtQjOz6nUW%252BulVxA.jpg" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="1600" data-original-width="1200" height="200" src="https://3.bp.blogspot.com/-eXoE6CcAhCU/W5EPQu-dLnI/AAAAAAAAtCI/zJsBLC7rjpcufrOxtJ2fPf9qEQ7_9G-0wCLcBGAs/s200/3VgsPhUtQjOz6nUW%252BulVxA.jpg" width="150" /&gt;&lt;/a&gt;I've been on the road for a long time now for my employer, going on 10 years believe it or not, but it's finally time to retire my old friend.&lt;br /&gt;&lt;br /&gt;It's been an amazing ride so far, with trips to almost all corners of this planet. I've met incredible people, spoken to fantastic groups, ate weird to amazing foods, and shopped in the strangest of cultures.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;My old friend has been with me most of the way, keeping me company through the rough and tumble life it's been forces to endure. I can't even count the number of miles my old friend has covered, but it's really time to retire.&lt;br /&gt;&lt;br /&gt;My old friend has started to limp a bit which makes the long treks from parking lots to terminals painful. Not only that, she's having trouble keeping up with me as we navigate hotel lobbies, airport hallways and rental car parking lots.&lt;br /&gt;&lt;br /&gt;It's gotten worse over the last few months.&lt;br /&gt;&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href="https://3.bp.blogspot.com/-uGHS4ltCR8Y/W5EPba7m2PI/AAAAAAAAtCM/L5iKznjurqk0lCEWVMfx73RX9-IKqkhMwCLcBGAs/s1600/fullsizeoutput_ed4e.jpeg" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img border="0" data-original-height="749" data-original-width="1600" height="93" src="https://3.bp.blogspot.com/-uGHS4ltCR8Y/W5EPba7m2PI/AAAAAAAAtCM/L5iKznjurqk0lCEWVMfx73RX9-IKqkhMwCLcBGAs/s200/fullsizeoutput_ed4e.jpeg" width="200" /&gt;&lt;/a&gt;There's been a few fixes in the past, just small band-aids really. But over the last year it's taken on larger forms, with duct tape becoming necessary.&lt;br /&gt;&lt;br /&gt;I found her in Beijing, China, on a trip to the very first Red Hat Technical Exchange (RHTE) in September of 2012.&lt;br /&gt;&lt;br /&gt;It wasn't called that back then, but it was a lot of fun and included a trip to the local shopping centre where I got the chance to haggle with the local merchants.&amp;nbsp; It took about an hour to get them down from around 200 to just 30 euros. I had to walk away three times, but the lady selling her chased me down to drag me back into negotiations.&lt;br /&gt;&lt;a href="https://3.bp.blogspot.com/-j_ogEZ3k1JI/W5EPjhCIOAI/AAAAAAAAtCU/-UWYquDte7AE8CztqzWDOIfJPMqJjXqJQCLcBGAs/s1600/fullsizeoutput_ed4d.jpeg" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img border="0" data-original-height="852" data-original-width="1600" height="106" src="https://3.bp.blogspot.com/-j_ogEZ3k1JI/W5EPjhCIOAI/AAAAAAAAtCU/-UWYquDte7AE8CztqzWDOIfJPMqJjXqJQCLcBGAs/s200/fullsizeoutput_ed4d.jpeg" width="200" /&gt;&lt;/a&gt;&lt;br /&gt;Great memories.&lt;br /&gt;&lt;br /&gt;After that I took her everywhere with me and put stickers from the early days of Red Hat products all over the outside.&lt;br /&gt;&lt;br /&gt;Made it easier to find her at baggage claims around the world and even got some funny reactions from the inspectors when they saw the JBoss BPM Suite "Do Not Touch" sticker.&lt;br /&gt;&lt;a href="https://2.bp.blogspot.com/-H3ZcFts3-_o/W5EPvRG5f6I/AAAAAAAAtCc/5mNkZltPH5M7NuxYx7TrgruRIasnP0WWgCLcBGAs/s1600/fullsizeoutput_ed53.jpeg" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img border="0" data-original-height="876" data-original-width="1600" height="109" src="https://2.bp.blogspot.com/-H3ZcFts3-_o/W5EPvRG5f6I/AAAAAAAAtCc/5mNkZltPH5M7NuxYx7TrgruRIasnP0WWgCLcBGAs/s200/fullsizeoutput_ed53.jpeg" width="200" /&gt;&lt;/a&gt;&lt;br /&gt;While others have come and gone along side of her, she has endured the longest and been by far the most trusted travel companion I've ever had.&lt;br /&gt;&lt;br /&gt;We've been to and all over the United States of America, to South America, Central America, all over Europe and to places in the Far East like China, Japan, Singapore and Malaysia.&lt;br /&gt;&lt;br /&gt;So today, it's time to retire my old friend.&lt;br /&gt;&lt;br /&gt;With that in mind, I wanted to share some of the images showing stickers for marketing Red Hat products going back over seven years.&lt;br /&gt;&lt;a href="https://4.bp.blogspot.com/-o_qTI7VSqGM/W5EP_jdgy_I/AAAAAAAAtCo/V4wO0wqm36IEHMpLcXUkVZeJSK4TPa2cgCLcBGAs/s1600/fullsizeoutput_ed54.jpeg" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img border="0" data-original-height="784" data-original-width="1600" height="97" src="https://4.bp.blogspot.com/-o_qTI7VSqGM/W5EP_jdgy_I/AAAAAAAAtCo/V4wO0wqm36IEHMpLcXUkVZeJSK4TPa2cgCLcBGAs/s200/fullsizeoutput_ed54.jpeg" width="200" /&gt;&lt;/a&gt;&lt;br /&gt;There are stickers you can't even get anymore as they've also disappeared into the annals of history. Most have been replaces by smaller, more compact versions with different slogans. Some of these are even a bit racy, taking the marketing of community projects to the edge.&lt;br /&gt;&lt;br /&gt;I've really enjoyed producing some of these initial stickers, but most of the fun has been collecting ones that come from other communities and other product teams.&lt;br /&gt;&lt;a href="https://1.bp.blogspot.com/-Scre-ageZws/W5ERLwPgwAI/AAAAAAAAtC0/t1Ow7cr8920yw0Q08E89RXvlNK1VBJRIQCLcBGAs/s1600/fullsizeoutput_ed4f.jpeg" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img border="0" data-original-height="750" data-original-width="1600" height="93" src="https://1.bp.blogspot.com/-Scre-ageZws/W5ERLwPgwAI/AAAAAAAAtC0/t1Ow7cr8920yw0Q08E89RXvlNK1VBJRIQCLcBGAs/s200/fullsizeoutput_ed4f.jpeg" width="200" /&gt;&lt;/a&gt;&lt;br /&gt;The theme has always been to maintain open technologies across all my luggage sticker efforts.&lt;br /&gt;&lt;br /&gt;It's become impossible to put enough duct tape on my oldest friend such that the contents could be reasonably expected to arrive dry, clean and intact.&amp;nbsp;&lt;br /&gt;&lt;br /&gt;So it's time to retire my old friend. You've done more than could be expected of you and covered so much ground.&lt;br /&gt;&lt;br /&gt;&lt;a href="https://2.bp.blogspot.com/-Cd1lLP6qHkc/W5ERfum3X0I/AAAAAAAAtC8/muHw5cvA-2s3icNlJRPwrw8x0lsES59MACLcBGAs/s1600/fullsizeoutput_ed50.jpeg" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img border="0" data-original-height="739" data-original-width="1600" height="91" src="https://2.bp.blogspot.com/-Cd1lLP6qHkc/W5ERfum3X0I/AAAAAAAAtC8/muHw5cvA-2s3icNlJRPwrw8x0lsES59MACLcBGAs/s200/fullsizeoutput_ed50.jpeg" width="200" /&gt;&lt;/a&gt;How many of your pieces of luggage have made it through seven years of travel and covered around one million miles of travel?&lt;br /&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=USPo3nTV0Pg:YSx651ApSZo:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=USPo3nTV0Pg:YSx651ApSZo:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=USPo3nTV0Pg:YSx651ApSZo:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=USPo3nTV0Pg:YSx651ApSZo:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=USPo3nTV0Pg:YSx651ApSZo:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=USPo3nTV0Pg:YSx651ApSZo:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=USPo3nTV0Pg:YSx651ApSZo:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=USPo3nTV0Pg:YSx651ApSZo:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=USPo3nTV0Pg:YSx651ApSZo:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=USPo3nTV0Pg:YSx651ApSZo:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=USPo3nTV0Pg:YSx651ApSZo:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/USPo3nTV0Pg" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Yug7zvl3-is" height="1" width="1" alt=""/&gt;</content><summary>I've been on the road for a long time now for my employer, going on 10 years believe it or not, but it's finally time to retire my old friend. It's been an amazing ride so far, with trips to almost all corners of this planet. I've met incredible people, spoken to fantastic groups, ate weird to amazing foods, and shopped in the strangest of cultures.  My old friend has been with me most of the way,...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2018-09-06T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/USPo3nTV0Pg/evangelist-traveller-tales-retiring-my-old-friend.html</feedburner:origLink></entry><entry><title>Kubernetes is the new application operating environment (Part 1)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ktI2SS4zJTs/" /><category term="ci/cd" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="microprofile" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="Modern App Dev" scheme="searchisko:content:tags" /><category term="Red Hat JBoss EAP" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><author><name>Ken Finnigan</name></author><id>searchisko:content:id:jbossorg_blog-kubernetes_is_the_new_application_operating_environment_part_1</id><updated>2018-09-05T13:11:07Z</updated><published>2018-09-05T13:11:07Z</published><content type="html">&lt;p&gt;This is the first in a series of articles that consider the role of &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;Kubernetes&lt;/a&gt; and application servers. Do application servers need to exist? Where does the current situation leave developers trying to choose the right path forward for their applications?&lt;/p&gt; &lt;h2&gt;Why Kubernetes is the new application server&lt;/h2&gt; &lt;p&gt;By now you’ve likely read &lt;a href="https://developers.redhat.com/blog/2018/06/28/why-kubernetes-is-the-new-application-server/"&gt;“Why Kubernetes is The New Application Server”&lt;/a&gt; and you might be wondering what that means for you. How does it impact Java EE or Jakarta EE and Eclipse MicroProfile? What about application servers or fat JARs? Is it the end as we’ve known it for nearly two decades?&lt;/p&gt; &lt;p&gt;In reality, it doesn’t impact the worldview for most. It’s in line with the efforts of a majority of vendors around Docker and Kubernetes deployments over the last few years. In addition, there’s greater interest in service mesh infrastructures, such as Istio, and how they can further assist with &lt;a href="https://developers.redhat.com/topics/kubernetes/"&gt;managing Kubernetes&lt;/a&gt; deployments.&lt;span id="more-512307"&gt;&lt;/span&gt;&lt;/p&gt; &lt;p&gt;All these factors are drivers for the current trends within development—pushing more concerns traditionally associated with development down into the lower layers of the entire stack, with concerns moving into infrastructure or the operating environment an application runs on.&lt;/p&gt; &lt;p&gt;Throughout the series, we will see that there is no need for doom and gloom. Although the mechanisms might change, there’s still a place for application servers and fat JARs when developing applications.&lt;/p&gt; &lt;h2&gt;Kubernetes and containers&lt;/h2&gt; &lt;p&gt;As mentioned in the &lt;a href="https://developers.redhat.com/blog/2018/06/28/why-kubernetes-is-the-new-application-server/"&gt;“Why Kubernetes is The New Application Server”&lt;/a&gt; article, yes, containers—and by extension Kubernetes—simplify the deployment process, wrapping all the necessary parts into a single piece that can be deployed. Containers also help prevent many problems associated with deploying to application servers. These problems can include incorrect configuration, JDBC driver issues, and inconsistencies between application server environments.&lt;/p&gt; &lt;h3&gt;Container benefits&lt;/h3&gt; &lt;p&gt;However, it’s not really containers that provide these benefits. It’s the combination of containers being &lt;b&gt;immutable&lt;/b&gt;, because Kubernetes requires immutability to implement failover and clustering, and practices such as &lt;b&gt;CI/CD&lt;/b&gt; for verifying and deploying containers that offers us the above benefits. We can just as easily put bad configuration or unverified code into a container and deploy it to production, just like we can when deploying to an application server in the past. As is often said, if you put garbage into anything you can expect to receive garbage out.&lt;/p&gt; &lt;h3&gt;Mutable containers&lt;/h3&gt; &lt;p&gt;Though we’ve mentioned containers that are immutable, they can actually be mutable as well, and in a variety of ways. With Docker, a container can be mutated by pushing an updated image with new content to an existing tag. More problematic is the practice of tags as symlinks to other tags. Though it’s great to be able to reference a more generic tag of a container, such as “8” for the latest MySQL container in the 8.x series, the next time a container using that image starts, it could be using a completely different version of MySQL. Instead of being 8.0.11 it could be 8.0.12, which should be OK, but it could also be 8.1.x instead, which is more likely to be a potential problem.&lt;/p&gt; &lt;h3&gt;Will containers save us?&lt;/h3&gt; &lt;p&gt;Containers in and of themselves are not a savior from our past transgressions and problems with production deployments. However, they are definitely part of the solution for reducing problems with deployments. Containers on their own require a great deal of process to be done right. Not doing containers the right way can lead to as many, or more, problems as not using containers.&lt;/p&gt; &lt;h2&gt;Kubernetes as the new application server&lt;/h2&gt; &lt;p&gt;When considering Kubernetes as the new application server, there are several factors. We need to take into account both what Kubernetes provides and what our application or microservice needs. If a deployment doesn’t interact with other applications, and maybe only stores some data in a database, then, yes, Kubernetes does become your new application server.&lt;/p&gt; &lt;h2&gt;Coming in Part 2&lt;/h2&gt; &lt;p&gt;Next time, we&amp;#8217;ll go deeper into the problem space that application servers are intended to solve, comparing that to Kubernetes as the new application server.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F09%2F05%2Fkubernetes-new-operating-environment%2F&amp;#38;linkname=Kubernetes%20is%20the%20new%20application%20operating%20environment%20%28Part%201%29" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F09%2F05%2Fkubernetes-new-operating-environment%2F&amp;#38;linkname=Kubernetes%20is%20the%20new%20application%20operating%20environment%20%28Part%201%29" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F09%2F05%2Fkubernetes-new-operating-environment%2F&amp;#38;linkname=Kubernetes%20is%20the%20new%20application%20operating%20environment%20%28Part%201%29" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F09%2F05%2Fkubernetes-new-operating-environment%2F&amp;#38;linkname=Kubernetes%20is%20the%20new%20application%20operating%20environment%20%28Part%201%29" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F09%2F05%2Fkubernetes-new-operating-environment%2F&amp;#38;linkname=Kubernetes%20is%20the%20new%20application%20operating%20environment%20%28Part%201%29" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F09%2F05%2Fkubernetes-new-operating-environment%2F&amp;#38;linkname=Kubernetes%20is%20the%20new%20application%20operating%20environment%20%28Part%201%29" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F09%2F05%2Fkubernetes-new-operating-environment%2F&amp;#38;linkname=Kubernetes%20is%20the%20new%20application%20operating%20environment%20%28Part%201%29" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F09%2F05%2Fkubernetes-new-operating-environment%2F&amp;#38;linkname=Kubernetes%20is%20the%20new%20application%20operating%20environment%20%28Part%201%29" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F09%2F05%2Fkubernetes-new-operating-environment%2F&amp;#38;title=Kubernetes%20is%20the%20new%20application%20operating%20environment%20%28Part%201%29" data-a2a-url="https://developers.redhat.com/blog/2018/09/05/kubernetes-new-operating-environment/" data-a2a-title="Kubernetes is the new application operating environment (Part 1)"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/09/05/kubernetes-new-operating-environment/"&gt;Kubernetes is the new application operating environment (Part 1)&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ktI2SS4zJTs" height="1" width="1" alt=""/&gt;</content><summary>This is the first in a series of articles that consider the role of Kubernetes and application servers. Do application servers need to exist? Where does the current situation leave developers trying to choose the right path forward for their applications? Why Kubernetes is the new application server By now you’ve likely read “Why Kubernetes is The New Application Server” and you might be wondering...</summary><dc:creator>Ken Finnigan</dc:creator><dc:date>2018-09-05T13:11:07Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/09/05/kubernetes-new-operating-environment/</feedburner:origLink></entry><entry><title>RESTEasy Tracing Feature Now Supports JSON formatted information</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/3tNv6orjWUw/resteasy-tracing-feature-now-supports-json-formatted-information" /><category term="feed_group_name_resteasy" scheme="searchisko:content:tags" /><category term="feed_name_resteasy" scheme="searchisko:content:tags" /><category term="JSON" scheme="searchisko:content:tags" /><category term="resteasy" scheme="searchisko:content:tags" /><category term="tracing" scheme="searchisko:content:tags" /><author><name>Weinan Li</name></author><id>searchisko:content:id:jbossorg_blog-resteasy_tracing_feature_now_supports_json_formatted_information</id><updated>2018-09-05T11:55:19Z</updated><published>2018-09-05T09:01:00Z</published><content type="html">&lt;!-- [DocumentBodyStart:b6d37cb4-ec07-45af-af48-7279bec622eb] --&gt;&lt;div class="jive-rendered-content"&gt;&lt;p&gt;Previously, the RESTEasy tracing feature just support the pre-formatted, text-based information like this:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ curl -i http://localhost:8081/foo | head&lt;br/&gt;...&lt;br/&gt; X-RESTEasy-Tracing-000: START&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; [ ---- /&amp;#160; ---- ms |&amp;#160; ---- %] baseUri=[http://localhost:8081/] requestUri=[http://localhost:8081/foo] method=[GET] authScheme=[n/a] accept=*/* accept-encoding=n/a accept-charset=n/a accept-language=n/a content-type=n/a content-length=n/a&lt;br/&gt; X-RESTEasy-Tracing-001: START&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; [ ---- /&amp;#160; 0.60 ms |&amp;#160; ---- %] Other request headers: Accept=[*/*] Host=[localhost:8081] User-Agent=[curl/7.55.1]&lt;br/&gt;1X-RESTEasy-Tracing-002: PRE-MATCH&amp;#160;&amp;#160; [ 0.01 /&amp;#160; 2.54 ms |&amp;#160; 0.00 %] PreMatchRequest summary: 0 filters&lt;br/&gt;0X-RESTEasy-Tracing-003: REQ-FILTER&amp;#160; [ 0.02 /&amp;#160; 5.35 ms |&amp;#160; 0.00 %] Filter by [io.weli.tracing.HttpMethodOverride @4b8ca04a]&lt;br/&gt;0X-RESTEasy-Tracing-004: REQ-FILTER&amp;#160; [ 0.03 /&amp;#160; 5.66 ms |&amp;#160; 0.00 %] Filter by [org.jboss.resteasy.core.AcceptHeaderByFileSuffixFilter @4d5e22c1]&lt;br/&gt; X-RESTEasy-Tracing-005: REQ-FILTER&amp;#160; [ 0.73 /&amp;#160; 5.88 ms |&amp;#160; 0.00 %] Request summary: 2 filters&lt;br/&gt;&amp;#160; X-RESTEasy-Tracing-006: MATCH&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; [ ---- /&amp;#160; 6.44 ms |&amp;#160; ---- %] Matched resource: template=[[org.jboss.resteasy.core.registry.ClassExpression @7e528471]] regexp=[\Q\E(.*)] matches=[[org.jboss.resteasy.core.registry.SegmentNode @5072e501]] from=[]&lt;br/&gt;&amp;#160; X-RESTEasy-Tracing-007: MATCH&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160;&amp;#160; [ ---- /&amp;#160; 6.60 ms |&amp;#160; ---- %] Matching path [/foo]&lt;br/&gt;...&lt;/code&gt;&lt;/pre&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;This kind of tracing info is easy for the human to read, but it&amp;#8217;s hard for program to process. Especially when it&amp;#8217;s used in a distributed environemnt when the tracing info need to be passed across applications.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;So now we add the feature to let tracing info to be returned in JSON format. To use this feature, you need to add the &lt;code&gt;tracing-api&lt;/code&gt; as dependency firstly:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;&lt;br/&gt;&amp;#160;&amp;#160;&amp;#160; &amp;lt;groupId&amp;gt;org.jboss.resteasy&amp;lt;/groupId&amp;gt;&lt;br/&gt;&amp;#160;&amp;#160;&amp;#160; &amp;lt;artifactId&amp;gt;resteasy-tracing-api&amp;lt;/artifactId&amp;gt;&lt;br/&gt;&amp;#160;&amp;#160;&amp;#160; &amp;lt;version&amp;gt;1.0.0-SNAPSHOT&amp;lt;/version&amp;gt;&lt;br/&gt;&amp;lt;/dependency&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;As shown above, now the &lt;code&gt;tracing-api&lt;/code&gt; is a standalone project and it belongs to the &lt;code&gt;resteasy-extensions&lt;/code&gt; project:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;blockquote class="jive-quote"&gt;&lt;br/&gt;&lt;p&gt;&lt;a class="jive-link-external-small" href="https://github.com/resteasy/resteasy-extensions" rel="nofollow"&gt;https://github.com/resteasy/resteasy-extensions&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;After including the above basic package, then we need to choose a JSON provider for tracing module to generate JSON formatted info.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;There are two JSON providers you can choose from and they both support the tracing feature.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;One is the &lt;code&gt;jackson2&lt;/code&gt; provider:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;&lt;br/&gt;&amp;#160;&amp;#160;&amp;#160; &amp;lt;groupId&amp;gt;org.jboss.resteasy&amp;lt;/groupId&amp;gt;&lt;br/&gt;&amp;#160;&amp;#160;&amp;#160; &amp;lt;artifactId&amp;gt;resteasy-jackson2-provider&amp;lt;/artifactId&amp;gt;&lt;br/&gt;&amp;#160;&amp;#160;&amp;#160; &amp;lt;version&amp;gt;4.0.0-SNAPSHOT&amp;lt;/version&amp;gt;&lt;br/&gt;&amp;lt;/dependency&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;The other option is to use the &lt;code&gt;json-binding&lt;/code&gt; provider:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;dependency&amp;gt;&lt;br/&gt;&amp;#160;&amp;#160;&amp;#160; &amp;lt;groupId&amp;gt;org.jboss.resteasy&amp;lt;/groupId&amp;gt;&lt;br/&gt;&amp;#160;&amp;#160;&amp;#160; &amp;lt;artifactId&amp;gt;resteasy-json-binding-provider&amp;lt;/artifactId&amp;gt;&lt;br/&gt;&amp;#160;&amp;#160;&amp;#160; &amp;lt;version&amp;gt;4.0.0-SNAPSHOT&amp;lt;/version&amp;gt;&lt;br/&gt;&amp;lt;/dependency&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;After including either of the above module, now we can request the resource server for JSON formatted data. The method is to send a format request header:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;X-RESTEasy-Tracing-Accept-Format: JSON&lt;/code&gt;&lt;/pre&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;Here is a request example:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;$ curl -H "X-RESTEasy-Tracing-Accept-Format: JSON" -i http://localhost:8081/foo&lt;/code&gt;&lt;/pre&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;And the response will be like this:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;X-RESTEasy-Tracing-000:&lt;br/&gt;[{"duration":0,"event":"START","text":"baseUri=[http://localhost:8081/]&lt;br/&gt;requestUri=[http://localhost:8081/foo] method=[GET] authScheme=[n/a] accept=*/*&lt;br/&gt;accept-encoding=n/a accept-charset=n/a accept-language=n/a content-type=n/a&lt;br/&gt;content-length=n/a&lt;br/&gt;","timestamp":46600869878437},{"duration":0,"event":"START_HEADERS","text":"Other&lt;br/&gt;request headers: Accept=[*/*] Host=[localhost:8081] User-Agent=[curl/7.55.1]&lt;br/&gt;X-RESTEasy-Tracing-Accept-Format=[JSON] &lt;br/&gt;","timestamp":46600870751617},{"duration":18336,"event":"PRE_MATCH_SUMMARY","tex&lt;br/&gt;t":"PreMatchRequest summary: 0 &lt;br/&gt;filters","timestamp":46600872781491},{"duration":20724,"event":"REQUEST_FILTER",&lt;br/&gt;"text":"Filter by [io.weli.tracing.HttpMethodOverride &lt;br/&gt;@585b0020]","timestamp":46600876716467},{"duration":19414,"event":"REQUEST_FILTE&lt;br/&gt;R","text":"Filter by [org.jboss.resteasy.core.AcceptHeaderByFileSuffixFilter &lt;br/&gt;@3779d352]","timestamp":46600877017341},{"duration":657192,"event":"REQUEST_FILT&lt;br/&gt;ER_SUMMARY","text":"Request summary: 2 filters",&lt;br/&gt;...&lt;/code&gt;&lt;/pre&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;After reformat the above response, we can see the response structure is like this:&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;pre&gt;&lt;code&gt;[&lt;br/&gt;{&lt;br/&gt;&amp;#160; &amp;ldquo;duration&amp;#8221;: 0,&lt;br/&gt;&amp;#160; &amp;ldquo;event&amp;#8221;: &amp;ldquo;START&amp;#8221;,&lt;br/&gt;&amp;#160; &amp;ldquo;text&amp;#8221;: &amp;ldquo;baseUri=[http://localhost:8081/] requestUri=[http://localhost:8081/foo] method=[GET] authScheme=[n/a] accept=*/* accept-encoding=n/a accept-charset=n/a accept-language=n/a content-type=n/a content-length=n/a &amp;ldquo;,&lt;br/&gt;&amp;#160; &amp;ldquo;timestamp&amp;#8221;: 46600869878437&lt;br/&gt;},&lt;br/&gt;{&lt;br/&gt;&amp;#160; &amp;ldquo;duration&amp;#8221;: 0,&lt;br/&gt;&amp;#160; &amp;ldquo;event&amp;#8221;: &amp;ldquo;START_HEADERS&amp;#8221;,&lt;br/&gt;&amp;#160; &amp;ldquo;text&amp;#8221;: &amp;ldquo;Other request headers: Accept=[*/*] Host=[localhost:8081] User-Agent=[curl/7.55.1] X-RESTEasy-Tracing-Accept-Format=[JSON] &amp;ldquo;,&lt;br/&gt;&amp;#160; &amp;ldquo;timestamp&amp;#8221;: 46600870751617&lt;br/&gt;},&lt;br/&gt;{&lt;br/&gt;&amp;#160; &amp;ldquo;duration&amp;#8221;: 18336,&lt;br/&gt;&amp;#160; &amp;ldquo;event&amp;#8221;: &amp;ldquo;PRE_MATCH_SUMMARY&amp;#8221;,&lt;br/&gt;&amp;#160; &amp;ldquo;text&amp;#8221;: &amp;ldquo;PreMatchRequest summary: 0 filters&amp;#8221;,&lt;br/&gt;&amp;#160; &amp;ldquo;timestamp&amp;#8221;: 46600872781491&lt;br/&gt;},&lt;br/&gt;{&lt;br/&gt;&amp;#160; &amp;ldquo;duration&amp;#8221;: 20724,&lt;br/&gt;&amp;#160; &amp;ldquo;event&amp;#8221;: &amp;ldquo;REQUEST_FILTER&amp;#8221;,&lt;br/&gt;&amp;#160; &amp;ldquo;text&amp;#8221;: &amp;ldquo;Filter by [io.weli.tracing.HttpMethodOverride @585b0020]&amp;#8221;,&lt;br/&gt;&amp;#160; &amp;ldquo;timestamp&amp;#8221;: 46600876716467&lt;br/&gt;},&lt;br/&gt;...&lt;br/&gt;]&lt;/code&gt;&lt;/pre&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;The &lt;code&gt;timestamp&lt;/code&gt; is the event start time, and the other fields are quite straightforward.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;The JSON formatted data should be more suitable to be parsed by code.&lt;/p&gt;&lt;p style="min-height: 8pt; padding: 0px;"&gt;&amp;#160;&lt;/p&gt;&lt;p&gt;This feature is currently just in &lt;code&gt;4.0.0-SNAPSHOT&lt;/code&gt;, and haven&amp;#8217;t been officially released yet.&lt;/p&gt;&lt;/div&gt;&lt;!-- [DocumentBodyEnd:b6d37cb4-ec07-45af-af48-7279bec622eb] --&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/3tNv6orjWUw" height="1" width="1" alt=""/&gt;</content><summary>Previously, the RESTEasy tracing feature just support the pre-formatted, text-based information like this:   $ curl -i http://localhost:8081/foo | head ... X-RESTEasy-Tracing-000: START       [ ---- /  ---- ms |  ---- %] baseUri=[http://localhost:8081/] requestUri=[http://localhost:8081/foo] method=[GET] authScheme=[n/a] accept=*/* accept-encoding=n/a accept-charset=n/a accept-language=n/a conten...</summary><dc:creator>Weinan Li</dc:creator><dc:date>2018-09-05T09:01:00Z</dc:date><feedburner:origLink>https://developer.jboss.org/community/resteasy/blog/2018/09/05/resteasy-tracing-feature-now-supports-json-formatted-information</feedburner:origLink></entry><entry><title>Announcing Thorntail 2.2.0.Final</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/9gwr4Y7P-hw/announcing-thorntail-2-2-0-final" /><category term="feed_group_name_wildfly_swarm" scheme="searchisko:content:tags" /><category term="feed_name_wildfly_swarm" scheme="searchisko:content:tags" /><author><name>The Thorntail Team</name></author><id>searchisko:content:id:jbossorg_blog-announcing_thorntail_2_2_0_final</id><updated>2018-09-05T05:00:00Z</updated><published>2018-09-05T05:00:00Z</published><content type="html">&lt;div class="sect1"&gt; &lt;h2 id="_thorntail_2_2_0_final"&gt;Thorntail 2.2.0.Final&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Coming through! Make way for Thorntail 2.2.0.Final!&lt;/p&gt; &lt;/div&gt; &lt;div class="sect2"&gt; &lt;h3 id="_what_s_new"&gt;What’s New?&lt;/h3&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This release contains a bunch of bugfixes focused mainly around MicroProfile. Metrics, JWT, OpenAPI and OpenTracing have all gotten their share of love. MicroProfile RestClient is now in supported profile and we have looked into the &lt;code&gt;Swarm main()&lt;/code&gt; in IDE. We also updated the log message codes to reflect the recent project name change.&lt;/p&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/9gwr4Y7P-hw" height="1" width="1" alt=""/&gt;</content><summary>Thorntail 2.2.0.Final Coming through! Make way for Thorntail 2.2.0.Final! What’s New? This release contains a bunch of bugfixes focused mainly around MicroProfile. Metrics, JWT, OpenAPI and OpenTracing have all gotten their share of love. MicroProfile RestClient is now in supported profile and we have looked into the Swarm main() in IDE. We also updated the log message codes to reflect the recent ...</summary><dc:creator>The Thorntail Team</dc:creator><dc:date>2018-09-05T05:00:00Z</dc:date><feedburner:origLink>https://wildfly-swarm.io/posts/announcing-thorntail-2-2-0-final</feedburner:origLink></entry><entry><title>Infinispan Spring Boot Beta2 is out!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/yTLj5jjmNZE/infinispan-spring-boot-beta2-is-out.html" /><category term="2.0.0.Beta2" scheme="searchisko:content:tags" /><category term="beta release" scheme="searchisko:content:tags" /><category term="feed_group_name_infinispan" scheme="searchisko:content:tags" /><category term="feed_name_infinispan" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><category term="Spring" scheme="searchisko:content:tags" /><category term="spring-boot starters" scheme="searchisko:content:tags" /><author><name>Katia Aresti</name></author><id>searchisko:content:id:jbossorg_blog-infinispan_spring_boot_beta2_is_out</id><updated>2018-09-04T14:23:19Z</updated><published>2018-09-04T14:23:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;Dear Infinispan and Spring Boot users,&lt;br /&gt;&lt;br /&gt;We have just released &lt;a href="https://github.com/infinispan/infinispan-spring-boot" target="_blank"&gt;Infinispan Spring Boot&lt;/a&gt;&amp;nbsp;&lt;b&gt;2.0.0.Beta2&lt;/b&gt;.&lt;br /&gt;&lt;br /&gt;Highlights of this release include:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Upgrade to &lt;a href="https://spring.io/projects/spring-boot" target="_blank"&gt;Spring Boot&lt;/a&gt; 2.0.3.RELEASE&lt;/li&gt;&lt;li&gt;RemoteCache can be injected now. Example &lt;span style="background-color: white;"&gt;&lt;a href="https://github.com/infinispan/infinispan-simple-tutorials/tree/master/spring-boot/remote" target="_blank"&gt;here&lt;/a&gt;&lt;/span&gt;&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;br /&gt;You can find the release in the maven central repository.&lt;br /&gt;&lt;br /&gt;Please report any issues in our&amp;nbsp;&lt;a href="https://issues.jboss.org/projects/ISPN"&gt;issue tracker&lt;/a&gt;&amp;nbsp;and join the conversation in our&amp;nbsp;&lt;a href="https://infinispan.zulipchat.com/"&gt;Zulip Chat&lt;/a&gt;&amp;nbsp;to shape up our next release.&lt;br /&gt;&lt;br /&gt;Enjoy,&lt;br /&gt;&lt;br /&gt;The Infinispan Team&lt;img src="http://feeds.feedburner.com/~r/Infinispan/~4/TtuQdq6zVY0" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/yTLj5jjmNZE" height="1" width="1" alt=""/&gt;</content><summary>Dear Infinispan and Spring Boot users, We have just released Infinispan Spring Boot 2.0.0.Beta2. Highlights of this release include: Upgrade to Spring Boot 2.0.3.RELEASE RemoteCache can be injected now. Example here  You can find the release in the maven central repository. Please report any issues in our issue tracker and join the conversation in our Zulip Chat to shape up our next release. Enjoy...</summary><dc:creator>Katia Aresti</dc:creator><dc:date>2018-09-04T14:23:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/Infinispan/~3/TtuQdq6zVY0/infinispan-spring-boot-beta2-is-out.html</feedburner:origLink></entry></feed>

package mundo.Navasoft;

public class ClienteThread extends Thread {
	
	private int numeroConsultas;
	private int id;
	private int mensajeActual;
	
	private Buffer buffer;
	
	private Mensaje[] mensajes;
	
	public ClienteThread(int pId, int pNum, Buffer pB){
		mensajeActual = 0;
		numeroConsultas = pNum;
		mensajes = new Mensaje[numeroConsultas];
		id = pId;
		buffer = pB;
	}
	
	public void enviar(){
		buffer.recibirMensaje(mensajes[mensajeActual]);
		synchronized(mensajes[mensajeActual]){
			try{
				wait();
			}
			catch(InterruptedException e){
				e.printStackTrace();
			}
		}
		recibirRespuesta();
	}
	
	public void recibirRespuesta(){
		mensajeActual++;
	}
	
	public void inicializarMensajes(){
		for(int i=0; i<numeroConsultas; i++){
			int men = (int) Math.random()*10000;
			mensajes[i] = new Mensaje(men, this);
		}
	}
	
	public void retirarse() {
		buffer.retirarCliente();
	}

	@Override
	public void run(){
		buffer.agregarCliente();
		
		inicializarMensajes();
		
		while(mensajeActual < numeroConsultas){
			enviar();
			try{
				long espera = 1000;
				sleep(espera);
			}
			catch(InterruptedException e){
				e.printStackTrace();
			}
		}
		
		retirarse();
	}
}
